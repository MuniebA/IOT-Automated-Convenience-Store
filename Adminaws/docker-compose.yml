services:
  # Main Application - IoT Store Admin Portal
  iot-store-app:
    image: munieb/iot-store-admin:latest
    container_name: iot-store-admin-portal
    ports:
      - "5000:5000"
    environment:
      # Flask Configuration
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - SECRET_KEY=iot-store-secret-key-prod-change-this-123456789
      
      # AWS Configuration
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      
      # DynamoDB Tables
      - CUSTOMERS_TABLE=${CUSTOMERS_TABLE:-iot-convenience-store-customers-production}
      - PRODUCTS_TABLE=${PRODUCTS_TABLE:-iot-convenience-store-products-production}
      - SESSIONS_TABLE=${SESSIONS_TABLE:-iot-convenience-store-sessions-production}
      - TRANSACTIONS_TABLE=${TRANSACTIONS_TABLE:-iot-convenience-store-transactions-production}
      - FRAUD_EVENTS_TABLE=${FRAUD_EVENTS_TABLE:-iot-convenience-store-fraud-events-production}
      - ACCESS_LOGS_TABLE=${ACCESS_LOGS_TABLE:-iot-convenience-store-access-logs-production}
      - SYSTEM_NODES_TABLE=${SYSTEM_NODES_TABLE:-iot-convenience-store-system-nodes-production}
      - ACTIVE_SESSIONS_TABLE=${ACTIVE_SESSIONS_TABLE:-iot-convenience-store-active-sessions-production}
      - CUSTOMER_PROFILES_TABLE=${CUSTOMER_PROFILES_TABLE:-iot-convenience-store-customer-profiles-production}
      - CUSTOMER_CLUSTERS_TABLE=${CUSTOMER_CLUSTERS_TABLE:-iot-convenience-store-customer-clusters-production}
      - DISCOUNT_EFFECTIVENESS_TABLE=${DISCOUNT_EFFECTIVENESS_TABLE:-iot-convenience-store-discount-effectiveness-production}
      - PURCHASE_BEHAVIOR_TABLE=${PURCHASE_BEHAVIOR_TABLE:-iot-convenience-store-purchase-behavior-production}
      
      # Application Settings
      - PORT=5000
      - DEBUG=${DEBUG:-False}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - iot-store-network

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: iot-store-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - iot-store-app
    restart: unless-stopped
    networks:
      - iot-store-network

networks:
  iot-store-network:
    driver: bridge